Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    KEYWORD

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     expression -> expression SYMBOL expression
Rule 3     expression -> ( expression )
Rule 4     expression -> INTEGER
Rule 5     expression -> STRING
Rule 6     expression -> IDENTIFIER

Terminals, with rules where they appear

(                    : 3
)                    : 3
IDENTIFIER           : 6
INTEGER              : 4
KEYWORD              : 
STRING               : 5
SYMBOL               : 2
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 2 3
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) expression -> . expression SYMBOL expression
    (3) expression -> . ( expression )
    (4) expression -> . INTEGER
    (5) expression -> . STRING
    (6) expression -> . IDENTIFIER

    (               shift and go to state 3
    INTEGER         shift and go to state 4
    STRING          shift and go to state 5
    IDENTIFIER      shift and go to state 6

    statement                      shift and go to state 1
    expression                     shift and go to state 2

state 1

    (0) S' -> statement .



state 2

    (1) statement -> expression .
    (2) expression -> expression . SYMBOL expression

    $end            reduce using rule 1 (statement -> expression .)
    SYMBOL          shift and go to state 7


state 3

    (3) expression -> ( . expression )
    (2) expression -> . expression SYMBOL expression
    (3) expression -> . ( expression )
    (4) expression -> . INTEGER
    (5) expression -> . STRING
    (6) expression -> . IDENTIFIER

    (               shift and go to state 3
    INTEGER         shift and go to state 4
    STRING          shift and go to state 5
    IDENTIFIER      shift and go to state 6

    expression                     shift and go to state 8

state 4

    (4) expression -> INTEGER .

    SYMBOL          reduce using rule 4 (expression -> INTEGER .)
    $end            reduce using rule 4 (expression -> INTEGER .)
    )               reduce using rule 4 (expression -> INTEGER .)


state 5

    (5) expression -> STRING .

    SYMBOL          reduce using rule 5 (expression -> STRING .)
    $end            reduce using rule 5 (expression -> STRING .)
    )               reduce using rule 5 (expression -> STRING .)


state 6

    (6) expression -> IDENTIFIER .

    SYMBOL          reduce using rule 6 (expression -> IDENTIFIER .)
    $end            reduce using rule 6 (expression -> IDENTIFIER .)
    )               reduce using rule 6 (expression -> IDENTIFIER .)


state 7

    (2) expression -> expression SYMBOL . expression
    (2) expression -> . expression SYMBOL expression
    (3) expression -> . ( expression )
    (4) expression -> . INTEGER
    (5) expression -> . STRING
    (6) expression -> . IDENTIFIER

    (               shift and go to state 3
    INTEGER         shift and go to state 4
    STRING          shift and go to state 5
    IDENTIFIER      shift and go to state 6

    expression                     shift and go to state 9

state 8

    (3) expression -> ( expression . )
    (2) expression -> expression . SYMBOL expression

    )               shift and go to state 10
    SYMBOL          shift and go to state 7


state 9

    (2) expression -> expression SYMBOL expression .
    (2) expression -> expression . SYMBOL expression

  ! shift/reduce conflict for SYMBOL resolved as shift
    $end            reduce using rule 2 (expression -> expression SYMBOL expression .)
    )               reduce using rule 2 (expression -> expression SYMBOL expression .)
    SYMBOL          shift and go to state 7

  ! SYMBOL          [ reduce using rule 2 (expression -> expression SYMBOL expression .) ]


state 10

    (3) expression -> ( expression ) .

    SYMBOL          reduce using rule 3 (expression -> ( expression ) .)
    $end            reduce using rule 3 (expression -> ( expression ) .)
    )               reduce using rule 3 (expression -> ( expression ) .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SYMBOL in state 9 resolved as shift
